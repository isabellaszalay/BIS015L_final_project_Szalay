labs(title = "Lowest Market Values of the Top 10 Global Companies by Country",
x = "Market Value",
y = "Global Company")
companies_MV_low+
theme_light()+
theme(plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size=10),
axis.text.x = element_text(size=9, hjust=1))
billionaires_country <- billionaires %>%
count(country) %>%
arrange(-n) %>%
head(10) %>%
ggplot(aes(x=reorder(country,n), y=n))+
geom_col(color = "black", fill ="coral1")+
coord_flip()+
labs(title = "No. of Billionaires by Country",
x = "Country",
y = "Number of Billionaires")
billionaires_country+
theme_light()+
theme(plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size=10),
axis.text.x = element_text(size=9, hjust=1))
companies %>%
count(country) %>%
arrange(-n) %>%
head(10) %>%
ggplot(aes(x=country, y=n, fill=country))+
geom_col()+
coord_polar()
prop <- c(590, 297, 196, 65, 64, 58, 55, 54, 54, 52)
pie(prop)
myPalette <- brewer.pal(9, "BuPu")
pie(prop, labels = c("US", "China", "Japan", "S.Korea", "UK", "Canada", "India", "France", "Hong Kong", "Germany"), border = "black", col=myPalette)
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth) %>%
count(state) %>%
arrange(-n)
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth)
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth) %>%
count(state) %>%
arrange(-n) %>%
ggplot(aes(x=state, y=n)) +
geom_col()
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth) %>%
count(state) %>%
arrange(-n) %>%
ggplot(aes(x=state, y=n)) +
geom_col(color = "cornsilk", fill = "plum", alpha = 0.8)+
theme_light() +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size=8),
axis.text.x = element_text(size=5.5, angle = 80, hjust=1))+
labs(title = "Distribution of the No. of Billionaires by State",
x = "State",
y = "No. of Billionaires")
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth) %>%
count(state) %>%
arrange(-n) %>%
ggplot(aes(x=state, y=n)) +
geom_col(color = "brown", fill = "plum", alpha = 0.8)+
theme_light() +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size=8),
axis.text.x = element_text(size=5.5, angle = 80, hjust=1))+
labs(title = "Distribution of the No. of Billionaires by State",
x = "State",
y = "No. of Billionaires")
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth) %>%
count(state) %>%
arrange(-n) %>%
ggplot(aes(x=state, y=n)) +
geom_col(color = "brown", fill = "plum", alpha = 0.8)+
theme_economist() +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size=8),
axis.text.x = element_text(size=5.5, angle = 80, hjust=1))+
labs(title = "Distribution of the No. of Billionaires by State",
x = "State",
y = "No. of Billionaires")
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth) %>%
count(state) %>%
arrange(-n) %>%
ggplot(aes(x=state, y=n)) +
geom_col(color = "brown", fill = "plum", alpha = 0.8)+
theme_classic() +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size=8),
axis.text.x = element_text(size=5.5, angle = 80, hjust=1))+
labs(title = "Distribution of the No. of Billionaires by State",
x = "State",
y = "No. of Billionaires")
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth) %>%
count(state) %>%
arrange(-n) %>%
ggplot(aes(x=state, y=n)) +
geom_col(color = "brown", fill = "plum", alpha = 0.8)+
theme_grid() +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size=8),
axis.text.x = element_text(size=5.5, angle = 80, hjust=1))+
labs(title = "Distribution of the No. of Billionaires by State",
x = "State",
y = "No. of Billionaires")
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth) %>%
count(state) %>%
arrange(-n) %>%
ggplot(aes(x=state, y=n)) +
geom_col(color = "brown", fill = "plum", alpha = 0.8)+
theme_linedraw() +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size=8),
axis.text.x = element_text(size=5.5, angle = 80, hjust=1))+
labs(title = "Distribution of the No. of Billionaires by State",
x = "State",
y = "No. of Billionaires")
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth) %>%
count(state) %>%
arrange(-n) %>%
head(10) %>%
ggplot(aes(x=state, y=n)) +
geom_col(color = "brown", fill = "plum", alpha = 0.8)+
theme_linedraw() +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size=8),
axis.text.x = element_text(size=5.5, angle = 80, hjust=1))+
labs(title = "Distribution of the No. of Billionaires by State",
x = "State",
y = "No. of Billionaires")
billionaires %>%
select(rank, person_name, final_worth, state) %>%
filter(state!="NA") %>%
arrange(-final_worth) %>%
count(state) %>%
arrange(-n) %>%
head(15) %>%
ggplot(aes(x=state, y=n)) +
geom_col(color = "brown", fill = "plum", alpha = 0.8)+
theme_linedraw() +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size=8),
axis.text.x = element_text(size=5.5, angle = 80, hjust=1))+
labs(title = "Distribution of the No. of Billionaires by State",
x = "State",
y = "No. of Billionaires")
billionaires_country+
theme_linedraw()+
theme(plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size=10),
axis.text.x = element_text(size=9, hjust=1))
companies_MV_low+
theme_linedraw()+
theme(plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size=10),
axis.text.x = element_text(size=9, hjust=1))
companies_MV_high+
theme_linedraw()+
theme(plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size=10),
axis.text.x = element_text(size=9, hjust=1))
ui <- dashboardPage(
dashboardHeader(title = "NPM by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput( "x", "Select Country", choices = c("United States", "Sweden", "Canada", "China", "Hong Kong", "United Kingdom", "Germany", "France", "Saudi Arabia", "Switzerland"),
selected = "United States"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "NPM by Country", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
install.packages("shinydashboard")
library(shinydashboard)
install.packages("shinydashboard")
knitr::opts_chunk$set(echo = TRUE)
glimpse(billionaires)
library(shinydashboard)
install.packages("shinydashboard")
library(shinydashboard)
install.packages("shinydashboard")
knitr::opts_chunk$set(echo = TRUE)
install.packages(shinydashboard)
library(shinydashboard)
install.packages("shinydashboard")
library(shinydashboard)
install.packages("shinydashboard")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("shinydashboard")
library(shinydashboard)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
install.packages("shinydashboard")
library(shinydashboard)
install.packages("shinydashboard")
knitr::opts_chunk$set(echo = TRUE)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "NPM by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput( "x", "Select Country", choices = c("United States", "Sweden", "Canada", "China", "Hong Kong", "United Kingdom", "Germany", "France", "Saudi Arabia", "Switzerland"),
selected = "United States"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "NPM by Country", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title="NPM by Country"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(
selectInput("x", "Select Country", choices = c("United States", "Sweden", "Canada", "China", "Hong Kong", "United Kingdom", "Germany", "France", "Saudi Arabia", "Switzerland"),
selected = "United States"),
sliderInput("pointsize", "Select the Point Size", min=.5, max=5, value=2.5, step=.5)
),
box(
plotOutput("plot", width="600px", height= "500px"))
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
companies_NPM %>%
filter(country==input$x) %>%
ggplot(aes(x=profit_bil, y=sales_bil, color=country)) +
geom_point(size=input$pointsize) +
theme_light() +
labs(
x = "Profit (Billions)",
y = "Sales (Billions)")
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "NPM by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput( "x", "Select Country", choices = c("United States", "Sweden", "Canada", "China", "Hong Kong", "United Kingdom", "Germany", "France", "Saudi Arabia", "Switzerland"),
selected = "United States"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "NPM by Country", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(companies_NPM, aes_string(x = input$x, color="country")) +
geom_point(size=input$pointsize, alpha=0.8) +
theme_light(base_size = 18) +
labs(
x = "Profit (Billions)",
y = "Sales (Billions)")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "NPM by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput( "x", "Select Country", choices = c("United States", "Sweden", "Canada", "China", "Hong Kong", "United Kingdom", "Germany", "France", "Saudi Arabia", "Switzerland"),
selected = "United States"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "NPM by Country", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(companies_NPM, aes_string(x = input$x)) +
geom_point(size=input$pointsize, alpha=0.8) +
theme_light(base_size = 18) +
labs(
x = "Profit (Billions)",
y = "Sales (Billions)")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "NPM by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput( "x", "Select Country", choices = c("United States", "Sweden", "Canada", "China", "Hong Kong", "United Kingdom", "Germany", "France", "Saudi Arabia", "Switzerland"),
selected = "United States"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "NPM by Country", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(companies_NPM, aes_string(x=profit_bil, y=sales_bil, fill=input$x)) +
geom_point(size=input$pointsize, alpha=0.8) +
theme_light(base_size = 18) +
labs(
x = "Profit (Billions)",
y = "Sales (Billions)")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "NPM by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput( "x", "Select Country", choices = c("United States", "Sweden", "Canada", "China", "Hong Kong", "United Kingdom", "Germany", "France", "Saudi Arabia", "Switzerland"),
selected = "United States"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "NPM by Country", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
companies_NPM %>%
filter(country==input$x) %>%
ggplot(aes(x=profit_bil, y=sales_bil, color=country)) +
geom_point(size=input$pointsize, alpha=0.8) +
theme_light(base_size = 18) +
labs(
x = "Profit (Billions)",
y = "Sales (Billions)")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("NPM by Country"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("country", " Select Country of Interest:", choices= c("United States", "Sweden", "Canada", "China", "Hong Kong", "United Kingdom", "Germany", "France", "Saudi Arabia", "Switzerland"),
selected = "United States")
,
# create a spot for the barplot
mainPanel(
plotOutput("Plot"))
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
ui <- fluidPage(
titlePanel("NPM by Country"),
sidebarLayout(
sidebarPanel(
selectInput("country", " Select Country of Interest:", choices= c("United States", "Sweden", "Canada", "China", "Hong Kong", "United Kingdom", "Germany", "France", "Saudi Arabia", "Switzerland"),
selected = "United States")
,
mainPanel(
plotOutput("Plot"))
)
)
server <- function(input, output, session) {
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("naniar")
library(RColorBrewer)
library(paletteer)
getwd()
billionaires<- read.csv("forbes_dataset_2022/forbes_billionaires_2022.csv", na="")
billionaires
billionaires <- janitor::clean_names(billionaires)
naniar::miss_var_summary(billionaires)
companies <- read.csv("forbes_dataset_2022/forbes_companies_2022.csv", na="")
companies
companies <- janitor::clean_names(companies)
naniar::miss_var_summary(companies)
companies <- companies %>%
separate(sales, into=c("sales", "factor1"), sep=" ")
companies <- companies %>%
separate(profit, into=c("profit", "factor2"), sep=" ")
companies <- companies %>%
separate(assets, into=c("assets", "factor3"), sep=" ")
companies <- companies %>%
separate(market_value, into=c("market_value", "factor4"), sep=" ")
companies$sales = gsub("\\$", "", companies$sales)
companies$sales = as.numeric(companies$sales)
companies$profit=as.numeric(gsub("\\$", "", companies$profit))
companies$assets = gsub(",","", companies$assets)
companies$assets = gsub("\\$","", companies$assets)
companies$assets = as.numeric(companies$assets)
companies$market_value = gsub(",","", companies$market_value)
companies$market_value = gsub("\\$","", companies$market_value)
companies$market_value = as.numeric(companies$market_value)
companies <- companies %>%
mutate(across(c(sales), ~ case_when(factor1 == "M"~ .x/1000,
TRUE ~ .x)))
companies <- companies %>%
mutate(across(c(profit), ~ case_when(factor2 == "M"~ .x/1000,
TRUE ~ .x)))
companies <- companies %>%
mutate(across(c(assets), ~ case_when(factor3 == "M"~ .x/1000,
TRUE ~ .x)))
companies <- companies %>%
mutate(across(c(market_value), ~ case_when(factor4 == "M"~ .x/1000,
TRUE ~ .x)))
companies <- companies %>%
select(-factor1, -factor2, -factor3, -factor4)
companies <- companies %>%
rename(sales_bil = "sales", profit_bil = "profit", assets_bil = "assets", market_value_bil = "market_value")
knitr::opts_chunk$set(echo = TRUE)
companies_profit %>%
head(20) %>%
count(category) %>%
arrange(-n)
companies_profit <- companies %>%
arrange(-profit_bil) %>%
select(rank, global_company, country, profit_bil, market_value_bil) %>%
mutate(category=case_when(
global_company =="Saudi Arabian Oil Company (Saudi Aramco)" ~ "Energy",
global_company =="Apple" ~ "Technology",
global_company =="Berkshire Hathaway" ~ "Finance & Investments",
global_company =="Alphabet" ~ "Technology",
global_company =="Microsoft" ~ "Technology",
global_company == "ICBC" ~ "Finance & Investments",
global_company == "China Construction Bank" ~ "Finance & Investments",
global_company == "JPMorgan Chase" ~ "Finance & Investments",
global_company == "Meta Platforms" ~ "Technology",
global_company == "Agricultural Bank of China" ~ "Finance & Investments",
global_company == "Tencent Holdings" ~ "Technology",
global_company == "Samsung Group" ~ "Technology",
global_company == "Bank of China" ~ "Finance & Investments",
global_company == "Amazon" ~ "Technology",
global_company == "Bank of America" ~ "Finance & Investments",
global_company == "Vivendi" ~ "Media & Entertainment",
global_company == "Toyota Motor" ~ "Automotive",
global_company == "Mercedes-Benz Group" ~ "Automotive",
global_company == "Gazprom" ~ "Energy",
global_company == "Novartis" ~ "Healthcare"
))
companies_profit %>%
head(20) %>%
count(category) %>%
arrange(-n)
